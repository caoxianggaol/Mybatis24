<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace可以理解为包名属性值可以理解为完全限定名-->
<mapper namespace="com.kaishengit.mapper.StudentMapper">

<!--id="save"给insert节点起名字-->
    <!--添加完成需要获得主键，则添加useGeneratedKeys="true" 使用自动增长的主键
    将生成的主键值赋给keyProperty对应的对象的属性上-->
    <insert id="save" parameterType="student"
            useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO student (stu_name, stu_age)
        VALUES
	    (#{stuName},#{stuAge})
    </insert>

    <!--批量添加-->
    <insert id="batchSave">
        INSERT INTO student (stu_name, stu_age)
        VALUES
        <foreach collection="studentList" item="student" separator=",">
            (#{student.stuName},#{student.stuAge})
        </foreach>
    </insert>
    
    <!--结果映射，查询结果的封装， 可通过注释掉下划线和数据库转换的那个配置来yanzhemg-->
    <resultMap id="studentMap" type="com.kaishengit.entity.Student">
        <id column="id" property="id"/>
        <result column="stu_name" property="stuName"/>
        <result column="stu_age" property="stuAge"/>
    </resultMap>
    <!--将指定的resultType="student"换为resultMap="studentMap" -->
    <select id="findAll" resultMap="studentMap">
        SELECT
        id,
        stu_name,
        stu_age
        FROM
        student
    </select>


  <!--  <select id="findAll" resultType="student">
        SELECT
            id,
            stu_name,
            stu_age
        FROM
            student
    </select>-->

    <select id="findById" parameterType="int" resultType="student">
        SELECT
            id,
            stu_name,
            stu_age
        FROM
            student
        WHERE
            id = #{id}
    </select>


    <select id="page" parameterType="int" resultType="student">
        SELECT
            id,
            stu_name,
            stu_age
        FROM
            student
       LIMIT
            #{offset},#{size}
    </select>

   <update id="update" parameterType="student" >
        UPDATE student
        SET stu_name = #{stuName}, stu_age = #{stuAge}
        WHERE
              id = #{id}
    </update>


        <delete id="delete" parameterType="int">
            DELETE FROM student WHERE id = #{id}
        </delete>

</mapper>