<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.UserMapper">

    <!--在实体类中有一个对象时使用如下，property="dept"指实体类中的属性dept，javaType="dept" 实体类中的类型Dept-->
    <!--方案一 -->
    <!--<resultMap id="userMap" type="user">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="address" property="address"/>
        <result column="password" property="password"/>
        <result column="dept_id" property="deptId"/>
        <association property="dept" javaType="dept">
            <id column="dept_id" property="id"/>
            <result column="dept_name" property="deptName"/>
        </association>
    </resultMap>
    &lt;!&ndash;resultMap="userMap"的属性值和resultMap中id的属性值一致为：userMap&ndash;&gt;
    <select id="findById" resultMap="userMap">
    SELECT
    t_user.id,
    user_name,
    address,
    `password`,
    dept_id,
    dept_name
    FROM
    t_user
    LEFT JOIN t_dept ON t_user.dept_id = t_dept.id
    WHERE
    t_user.id = #{userId}
</select>
-->
    <!--方案二-->
    <select id="findById" resultType="user">
        SELECT
            t_user.id,
            user_name,
            address,
            `password`,
            dept_id,

            t_dept.id as 'dept.id',
            dept_name as 'dept.deptName'
        FROM
            t_user
            LEFT JOIN t_dept ON t_user.dept_id = t_dept.id
        WHERE
            t_user.id = #{userId}
    </select>

</mapper>